services:
  database:
    container_name: gautrackerdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=GauTracker
    restart: unless-stopped
    ports:
        - "5432:5432"
    volumes:
      - postgres_gautracker:/var/lib/postgresql/data/ 

  openobserve:
    container_name: openobserve
    environment:
      - ZO_ROOT_USER_EMAIL=admin@openobserve.ai
      - ZO_ROOT_USER_PASSWORD=Complexpass#123
      - ZO_DATA_DIR=/data
    restart: unless-stopped
    ports:
      - "5080:5080"
    volumes:
      - openobserve_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  rabbitmq:
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"

  gautracker.api:
    container_name: gautracker-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
      - database
    ports:
      - "5001:8080"
      - "6001:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  background.api:
    container_name: background-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    depends_on:
      - database
    ports:
      - "5002:8080"
      - "6002:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro